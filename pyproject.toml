[build-system]
requires = [
    "setuptools>=61.0",
    "wheel",
    "pybind11[global]>=2.10.0",
    "cmake>=3.18",
    "ninja; platform_system != 'Windows'",
]
build-backend = "setuptools.build_meta"

[project]
name = "tiny-torch"
version = "0.1.0"
description = "A PyTorch-inspired deep learning framework"
readme = "README.md"
license = {text = "BSD-3-Clause"}
authors = [
    {name = "Tiny-Torch Contributors", email = "tiny-torch@example.com"},
]
maintainers = [
    {name = "Tiny-Torch Contributors", email = "tiny-torch@example.com"},
]
keywords = ["deep learning", "neural networks", "pytorch", "machine learning", "ai"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: C++",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.19.0",
    "typing-extensions>=3.7.0",
]

[project.optional-dependencies]
test = [
    "pytest>=6.0.0",
    "pytest-cov>=2.10.0",
    "pytest-xdist>=2.0.0",
]
dev = [
    "black>=21.0.0",
    "flake8>=3.8.0",
    "mypy>=0.900",
    "pre-commit>=2.15.0",
    "isort>=5.9.0",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.15.0",
]
benchmark = [
    "torch>=1.12.0",  # For comparison
    "matplotlib>=3.3.0",
    "seaborn>=0.11.0",
    "pandas>=1.3.0",
]

[project.urls]
Homepage = "https://github.com/your-username/tiny-torch"
Documentation = "https://tiny-torch.readthedocs.io/"
Repository = "https://github.com/your-username/tiny-torch.git"
"Bug Tracker" = "https://github.com/your-username/tiny-torch/issues"
Changelog = "https://github.com/your-username/tiny-torch/blob/main/CHANGELOG.md"

[tool.setuptools.packages.find]
exclude = ["test*", "benchmarks*", "examples*", "docs*"]

[tool.setuptools.package-data]
"tiny_torch" = ["py.typed"]

# Black code formatter
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | csrc
)/
'''

# isort import sorter
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["tiny_torch", "torch"]
skip_glob = ["csrc/**"]

# MyPy type checker
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
show_column_numbers = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "numpy.*",
    "pybind11.*",
    "tiny_torch.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=tiny_torch",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["test"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "cuda: marks tests as requiring CUDA",
    "cpu: marks tests as CPU-only",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

# Coverage configuration
[tool.coverage.run]
source = ["tiny_torch"]
omit = [
    "*/test/*",
    "*/tests/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
